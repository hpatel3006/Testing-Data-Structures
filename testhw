#! /bin/bash

echo $1
testerDirectory="/home/ssdavis/60/p3/Testing"

if [ $# -ne 1 ]; then
  echo "usage testhw: testhw source_directory" 1>&2
  exit
fi

if [[ $1 =~ Testing ]]; then # Use from this directory is not allowed
  echo "You may not use Testing as your own source directory!"  1>&2
  exit
fi

cd $1
echo -n "Scores from p3 for " > results.txt

if [ -e authors.csv ]; then
  dos2unix -q authors.csv
  awk -F, {'for (i = 2; i <= NF; ++i) printf"%s ", $i'} authors.csv >> results.txt
  echo -e "\n"
  awk -F, 'NR < 4 {for (i = 2; i <= NF; ++i) printf"%s", $i; printf"\n";}' authors.csv > names.txt
  echo -e "\nNote that format is: e-mail<comma>last name<comma>first name" >> results.txt
  echo "For example: ssdavis@ucdavis.edu,Davis,Sean"  >> results.txt
  awk -F, {'printf"%s ", $1'} authors.csv > addresses
else
  echo  "You need to create an authors.csv file!!!! No one will receive credit for this assignment"  >> results.txt
  echo "$1@ucdavis.edu" > addresses
  finger ${PWD##*/} | awk 'NR == 1 {printf"%s,%s", $5, $4}' > names.txt
fi

echo -n "Addresses used: " >> results.txt
cat addresses >> results.txt
echo -e "\n" >> results.txt

rm -f rangetest.* timetestPtr.* CPUTimer.* *.dat >& /dev/null
cp $testerDirectory/*.h $testerDirectory/*.cpp $testerDirectory/*.dat .
HashScore=0
BSTScore=0

g++ rangetest.cpp &> /dev/null

if [[ ! -e a.out ]]; then # a not found
  echo "BST.cpp does not compile with rangetest.cpp in $1!"  >> results.txt 
else
  fileNum=1
  echo BST.cpp operation testing:  >> results.txt

  while [[ $fileNum -lt 6 ]]; do
    echo $fileNum  1>&2
    echo -n "$fileNum: for " >> results.txt
    cat $testerDirectory/input$fileNum.txt >> results.txt
    rm -f out$fileNum.txt  
    (a.out < $testerDirectory/input$fileNum.txt &> out$fileNum.txt )&
    sleep 1
    pkill a.out &> /dev/null
    diff out$fileNum.txt $testerDirectory/out$fileNum.txt &> temp

    if [[ ( ! -e out$fileNum.txt) || ( -s temp ) ]]; then
      echo "Differences on " input$fileNum.txt >> results.txt
      echo Yours: >> results.txt 
      cat out$fileNum.txt  >> results.txt
      echo -e "\nSeans:" >> results.txt
      cat $testerDirectory/out$fileNum.txt >> results.txt
    else
      echo OK >> results.txt
      ((BSTScore+=2))
    fi

    fileNum=$((fileNum + 1))
  done  # while less than 6
fi # if BST a.out

echo -e "BST.cpp total: $BSTScore \n"  >> results.txt

rm -f a.out &> /dev/null
g++ timetestPtr.cpp

if [[ ! -e a.out ]]; then # a not found
  echo "QuadraticProbingPtr.cpp does not compile with timetestPtr.cpp in $1!"  >> results.txt
else
  fileNum=6
  echo QuadraticProbingPtr operation testing:  >> results.txt

  while [[ $fileNum -lt 11 ]]; do
    echo $fileNum  1>&2
    echo -n "$fileNum: for " >> results.txt
    cat $testerDirectory/input$fileNum.txt >> results.txt
    rm -f out$fileNum.txt
    (a.out `cat $testerDirectory/input$fileNum.txt` &> out$fileNum.txt )&
    sleep 1
    pkill a.out &> /dev/null
    seans=$(cat $testerDirectory/out$fileNum.txt)
    theirs=$( cat out$fileNum.txt)
    smallSeans=$(( $seans / 2 ))
    bigSeans=$(( $seans * 2 )) 

    if [[ $theirs -lt $smallSeans || $theirs -gt $bigSeans ]]; then
      echo "Time is not in valid range" >> results.txt
      echo "Yours: $theirs / 100" >> results.txt
      echo "Seans: $seans / 100" >> results.txt
    else
      echo OK >> results.txt
      ((HashScore+=2))
    fi

    fileNum=$((fileNum + 1))
  done  # while less than 11
fi # if QuadraticProbingPtr a.out

echo "QuadraticProbingPtr.cpp total: $HashScore"  >> results.txt

FinalScore=$(( $HashScore + $BSTScore ))
echo -e "\nTotal score: $FinalScore" >> results.txt

#mailx -s "ECS 60 P3 Test Results" `cat addresses` < results.txt

#awk 'NR == 1 {printf"%s,", $0}' names.txt >> ../results.csv
#echo " ${1%%/},$FinalScore,$BSTScore,$HashScore" >> ../results.csv
#authorCount=$(grep "@" authors.txt | wc -l)

#if [ $authorCount -gt 1 ]; then
#  awk 'NR == 2 {printf"%s,", $0}' names.txt >> ../results.csv
#  echo "${1%%/},$FinalScore,$BSTScore,$HashScore" >> ../results.csv
